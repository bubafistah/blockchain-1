name: macOS

on:
  push:
    branches:
      - 'main'
      - 'dev'
      - 'v*'
    tags:
      - 'v*'
    paths-ignore:
      - '**.md'
  pull_request:
    branches:
      - 'main'
      - 'dev'
      - 'v*'
    paths-ignore:
      - '**.md'

# The below variables reduce repetitions across similar targets
env:
  REMOVE_BUNDLED_BOOST : rm -rf /usr/local/share/boost
  BUILD_DEFAULT_LINUX: |
        cmake -S . -B build -D ARCH="default" -D BUILD_TESTS=ON -D CMAKE_BUILD_TYPE=release && cmake --build build -j3
  APT_INSTALL_LINUX: 'sudo apt -y install build-essential cmake libboost-all-dev miniupnpc libunbound-dev graphviz doxygen libunwind8-dev pkg-config libssl-dev libzmq3-dev libsodium-dev libhidapi-dev libnorm-dev libusb-1.0-0-dev libpgm-dev libprotobuf-dev protobuf-compiler ccache'
  APT_SET_CONF: |
        echo "Acquire::Retries \"3\";"         | sudo tee -a /etc/apt/apt.conf.d/80-custom
        echo "Acquire::http::Timeout \"120\";" | sudo tee -a /etc/apt/apt.conf.d/80-custom
        echo "Acquire::ftp::Timeout \"120\";"  | sudo tee -a /etc/apt/apt.conf.d/80-custom
  CCACHE_SETTINGS: |
        ccache --max-size=150M
        ccache --set-config=compression=true

jobs:
  macos:
    runs-on: macos-latest
    env:
      HOMEBREW_MAKE_JOBS: 2
      HOMEBREW_NO_AUTO_UPDATE: 1
      CCACHE_TEMPDIR: /tmp/.ccache-temp
    steps:
    - uses: actions/checkout@v1
      with:
        submodules: recursive
    - uses: actions/cache@v2
      with:
        path: /Users/runner/Library/Caches/ccache
        key: ccache-${{ runner.os }}-build-${{ github.sha }}
        restore-keys: ccache-${{ runner.os }}-build-
    - name: install dependencies
      run: brew install hidapi openssl zmq libpgm miniupnpc ldns expat libunwind-headers protobuf ccache
    - run: brew install --build-from-source ./utils/homebrew/boost@169.rb
    - name: build
      run: |
        ${{env.CCACHE_SETTINGS}}
        make release-static-mac-x86_64 -j${HOMEBREW_MAKE_JOBS}
    - run: LETHEAN_RELEASE=macOS make zip-release
    - uses: actions/upload-artifact@v2
      with:
        name: macOS.tar
        path: ${{ github.workspace }}/build/macOS.tar
    - name: Get the version
      id: get_version
      if: startsWith(github.ref, 'refs/tags/')
      run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
    - name: Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: ${{ github.workspace }}/build/macOS.tar

